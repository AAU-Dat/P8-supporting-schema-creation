name: Build GitHub Page

on:
  workflow_dispatch:

permissions:
  id-token: write
  pages: write

env:
  INSTANCE: Writerside/spn
  ARTIFACT:  webHelpSPN2-all.zip
  DOCKER_VERSION: 233.14389
  ALGOLIA_ARTIFACT: algolia-indexes-SPN.zip
  ALGOLIA_APP_NAME: K5H26NS4O0
  ALGOLIA_INDEX_NAME: github_P8
  ALGOLIA_KEY: ${{ secrets.ALGOLIA_KEY }}
  CONFIG_JSON_PRODUCT: SPN
  CONFIG_JSON_VERSION: 1.0

jobs:
  pdf:
    needs: build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./report/src

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install latexmk
        run: |
          sudo apt-get update
          sudo apt-get install -y latexmk texlive-latex-extra texlive-fonts-extra texlive-bibtex-extra biber
      - name: Install Python dependencies on Ubuntu
        run: sudo apt-get install -y python3-pygments
      - name: Install Pygments
        run: |
          pip install --upgrade Pygments
          pip show pygments

      # Runs latex script
      - name: Compile LaTeX
        run: |
          latexmk main.tex -pdf -shell-escape -synctex=1 -interaction=nonstopmode -f
          biber main
          latexmk main.tex -pdf -shell-escape -synctex=1 -interaction=nonstopmode -f
          latexmk main.tex -pdf -shell-escape -synctex=1 -interaction=nonstopmode -f
          dir

      # Save pdf as artifact
      - name: Save artifact with build results
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: ./report/src/main.pdf
          retention-days: 7
  
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build docs using Writerside Docker builder
        uses: JetBrains/writerside-github-action@v4
        with:
          instance: ${{ env.INSTANCE }}
          artifact: ${{ env.ARTIFACT }}
          docker-version: ${{ env.DOCKER_VERSION }}

      - name: Save artifact with build results
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: |
            artifacts/${{ env.ARTIFACT }}
            artifacts/report.json
            artifacts/${{ env.ALGOLIA_ARTIFACT }}
          retention-days: 7
  test:
    needs: [pdf, build]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: docs
          path: artifacts

      - name: Download pdf artifact
        uses: actions/download-artifact@v3
        with:
          name: docs

      - name: Test documentation
        uses: JetBrains/writerside-checker-action@v1
        with:
          instance: ${{ env.INSTANCE }}
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: docs

      - name: Display structure of downloaded files
        run: ls -R

      - name: Unzip artifact
        run: unzip -O UTF-8 -qq ${{ env.ARTIFACT }} -d dir

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Package and upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dir

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
  publish-indexes:
    needs: [ build, test, deploy ]
    runs-on: ubuntu-latest
    container:
      image: registry.jetbrains.team/p/writerside/builder/algolia-publisher:2.0.32-2
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: docs

      - name: Unzip artifact
        run: |
          unzip -O UTF-8 -qq ${{ env.ALGOLIA_ARTIFACT }} -d algolia-indexes
          env algolia-key=${{env.ALGOLIA_KEY}} java -jar /opt/builder/help-publication-agent.jar \
          update-index \
          --application-name ${{env.ALGOLIA_APP_NAME}} \
          --index-name ${{env.ALGOLIA_INDEX_NAME}} \
          --product ${{env.CONFIG_JSON_PRODUCT}} \
          --version ${{env.CONFIG_JSON_VERSION}} \
          --index-directory algolia-indexes/ \
          2>&1 | tee algolia-update-index-log.txt
